//
// Copyright 2019 WebAssembly Community Group participants
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

WASP_V(0x00, 0x00, Unreachable, "unreachable")
WASP_V(0x00, 0x01, Nop, "nop")
WASP_V(0x00, 0x02, Block, "block")
WASP_V(0x00, 0x03, Loop, "loop")
WASP_V(0x00, 0x04, If, "if")
WASP_V(0x00, 0x05, Else, "else")
WASP_V(0x00, 0x0b, End, "end")
WASP_V(0x00, 0x0c, Br, "br")
WASP_V(0x00, 0x0d, BrIf, "br_if")
WASP_V(0x00, 0x0e, BrTable, "br_table")
WASP_V(0x00, 0x0f, Return, "return")
WASP_V(0x00, 0x10, Call, "call")
WASP_V(0x00, 0x11, CallIndirect, "call_indirect")
WASP_V(0x00, 0x1a, Drop, "drop")
WASP_V(0x00, 0x1b, Select, "select")
WASP_V(0x00, 0x20, LocalGet, "local.get")
WASP_V(0x00, 0x21, LocalSet, "local.set")
WASP_V(0x00, 0x22, LocalTee, "local.tee")
WASP_V(0x00, 0x23, GlobalGet, "global.get")
WASP_V(0x00, 0x24, GlobalSet, "global.set")
WASP_V(0x00, 0x28, I32Load, "i32.load")
WASP_V(0x00, 0x29, I64Load, "i64.load")
WASP_V(0x00, 0x2a, F32Load, "f32.load")
WASP_V(0x00, 0x2b, F64Load, "f64.load")
WASP_V(0x00, 0x2c, I32Load8S, "i32.load8_s")
WASP_V(0x00, 0x2d, I32Load8U, "i32.load8_u")
WASP_V(0x00, 0x2e, I32Load16S, "i32.load16_s")
WASP_V(0x00, 0x2f, I32Load16U, "i32.load16_u")
WASP_V(0x00, 0x30, I64Load8S, "i64.load8_s")
WASP_V(0x00, 0x31, I64Load8U, "i64.load8_u")
WASP_V(0x00, 0x32, I64Load16S, "i64.load16_s")
WASP_V(0x00, 0x33, I64Load16U, "i64.load16_u")
WASP_V(0x00, 0x34, I64Load32S, "i64.load32_s")
WASP_V(0x00, 0x35, I64Load32U, "i64.load32_u")
WASP_V(0x00, 0x36, I32Store, "i32.store")
WASP_V(0x00, 0x37, I64Store, "i64.store")
WASP_V(0x00, 0x38, F32Store, "f32.store")
WASP_V(0x00, 0x39, F64Store, "f64.store")
WASP_V(0x00, 0x3a, I32Store8, "i32.store8")
WASP_V(0x00, 0x3b, I32Store16, "i32.store16")
WASP_V(0x00, 0x3c, I64Store8, "i64.store8")
WASP_V(0x00, 0x3d, I64Store16, "i64.store16")
WASP_V(0x00, 0x3e, I64Store32, "i64.store32")
WASP_V(0x00, 0x3f, MemorySize, "memory.size")
WASP_V(0x00, 0x40, MemoryGrow, "memory.grow")
WASP_V(0x00, 0x41, I32Const, "i32.const")
WASP_V(0x00, 0x42, I64Const, "i64.const")
WASP_V(0x00, 0x43, F32Const, "f32.const")
WASP_V(0x00, 0x44, F64Const, "f64.const")
WASP_V(0x00, 0x45, I32Eqz, "i32.eqz")
WASP_V(0x00, 0x46, I32Eq, "i32.eq")
WASP_V(0x00, 0x47, I32Ne, "i32.ne")
WASP_V(0x00, 0x48, I32LtS, "i32.lt_s")
WASP_V(0x00, 0x49, I32LtU, "i32.lt_u")
WASP_V(0x00, 0x4a, I32GtS, "i32.gt_s")
WASP_V(0x00, 0x4b, I32GtU, "i32.gt_u")
WASP_V(0x00, 0x4c, I32LeS, "i32.le_s")
WASP_V(0x00, 0x4d, I32LeU, "i32.le_u")
WASP_V(0x00, 0x4e, I32GeS, "i32.ge_s")
WASP_V(0x00, 0x4f, I32GeU, "i32.ge_u")
WASP_V(0x00, 0x50, I64Eqz, "i64.eqz")
WASP_V(0x00, 0x51, I64Eq, "i64.eq")
WASP_V(0x00, 0x52, I64Ne, "i64.ne")
WASP_V(0x00, 0x53, I64LtS, "i64.lt_s")
WASP_V(0x00, 0x54, I64LtU, "i64.lt_u")
WASP_V(0x00, 0x55, I64GtS, "i64.gt_s")
WASP_V(0x00, 0x56, I64GtU, "i64.gt_u")
WASP_V(0x00, 0x57, I64LeS, "i64.le_s")
WASP_V(0x00, 0x58, I64LeU, "i64.le_u")
WASP_V(0x00, 0x59, I64GeS, "i64.ge_s")
WASP_V(0x00, 0x5a, I64GeU, "i64.ge_u")
WASP_V(0x00, 0x5b, F32Eq, "f32.eq")
WASP_V(0x00, 0x5c, F32Ne, "f32.ne")
WASP_V(0x00, 0x5d, F32Lt, "f32.lt")
WASP_V(0x00, 0x5e, F32Gt, "f32.gt")
WASP_V(0x00, 0x5f, F32Le, "f32.le")
WASP_V(0x00, 0x60, F32Ge, "f32.ge")
WASP_V(0x00, 0x61, F64Eq, "f64.eq")
WASP_V(0x00, 0x62, F64Ne, "f64.ne")
WASP_V(0x00, 0x63, F64Lt, "f64.lt")
WASP_V(0x00, 0x64, F64Gt, "f64.gt")
WASP_V(0x00, 0x65, F64Le, "f64.le")
WASP_V(0x00, 0x66, F64Ge, "f64.ge")
WASP_V(0x00, 0x67, I32Clz, "i32.clz")
WASP_V(0x00, 0x68, I32Ctz, "i32.ctz")
WASP_V(0x00, 0x69, I32Popcnt, "i32.popcnt")
WASP_V(0x00, 0x6a, I32Add, "i32.add")
WASP_V(0x00, 0x6b, I32Sub, "i32.sub")
WASP_V(0x00, 0x6c, I32Mul, "i32.mul")
WASP_V(0x00, 0x6d, I32DivS, "i32.div_s")
WASP_V(0x00, 0x6e, I32DivU, "i32.div_u")
WASP_V(0x00, 0x6f, I32RemS, "i32.rem_s")
WASP_V(0x00, 0x70, I32RemU, "i32.rem_u")
WASP_V(0x00, 0x71, I32And, "i32.and")
WASP_V(0x00, 0x72, I32Or, "i32.or")
WASP_V(0x00, 0x73, I32Xor, "i32.xor")
WASP_V(0x00, 0x74, I32Shl, "i32.shl")
WASP_V(0x00, 0x75, I32ShrS, "i32.shr_s")
WASP_V(0x00, 0x76, I32ShrU, "i32.shr_u")
WASP_V(0x00, 0x77, I32Rotl, "i32.rotl")
WASP_V(0x00, 0x78, I32Rotr, "i32.rotr")
WASP_V(0x00, 0x79, I64Clz, "i64.clz")
WASP_V(0x00, 0x7a, I64Ctz, "i64.ctz")
WASP_V(0x00, 0x7b, I64Popcnt, "i64.popcnt")
WASP_V(0x00, 0x7c, I64Add, "i64.add")
WASP_V(0x00, 0x7d, I64Sub, "i64.sub")
WASP_V(0x00, 0x7e, I64Mul, "i64.mul")
WASP_V(0x00, 0x7f, I64DivS, "i64.div_s")
WASP_V(0x00, 0x80, I64DivU, "i64.div_u")
WASP_V(0x00, 0x81, I64RemS, "i64.rem_s")
WASP_V(0x00, 0x82, I64RemU, "i64.rem_u")
WASP_V(0x00, 0x83, I64And, "i64.and")
WASP_V(0x00, 0x84, I64Or, "i64.or")
WASP_V(0x00, 0x85, I64Xor, "i64.xor")
WASP_V(0x00, 0x86, I64Shl, "i64.shl")
WASP_V(0x00, 0x87, I64ShrS, "i64.shr_s")
WASP_V(0x00, 0x88, I64ShrU, "i64.shr_u")
WASP_V(0x00, 0x89, I64Rotl, "i64.rotl")
WASP_V(0x00, 0x8a, I64Rotr, "i64.rotr")
WASP_V(0x00, 0x8b, F32Abs, "f32.abs")
WASP_V(0x00, 0x8c, F32Neg, "f32.neg")
WASP_V(0x00, 0x8d, F32Ceil, "f32.ceil")
WASP_V(0x00, 0x8e, F32Floor, "f32.floor")
WASP_V(0x00, 0x8f, F32Trunc, "f32.trunc")
WASP_V(0x00, 0x90, F32Nearest, "f32.nearest")
WASP_V(0x00, 0x91, F32Sqrt, "f32.sqrt")
WASP_V(0x00, 0x92, F32Add, "f32.add")
WASP_V(0x00, 0x93, F32Sub, "f32.sub")
WASP_V(0x00, 0x94, F32Mul, "f32.mul")
WASP_V(0x00, 0x95, F32Div, "f32.div")
WASP_V(0x00, 0x96, F32Min, "f32.min")
WASP_V(0x00, 0x97, F32Max, "f32.max")
WASP_V(0x00, 0x98, F32Copysign, "f32.copysign")
WASP_V(0x00, 0x99, F64Abs, "f64.abs")
WASP_V(0x00, 0x9a, F64Neg, "f64.neg")
WASP_V(0x00, 0x9b, F64Ceil, "f64.ceil")
WASP_V(0x00, 0x9c, F64Floor, "f64.floor")
WASP_V(0x00, 0x9d, F64Trunc, "f64.trunc")
WASP_V(0x00, 0x9e, F64Nearest, "f64.nearest")
WASP_V(0x00, 0x9f, F64Sqrt, "f64.sqrt")
WASP_V(0x00, 0xa0, F64Add, "f64.add")
WASP_V(0x00, 0xa1, F64Sub, "f64.sub")
WASP_V(0x00, 0xa2, F64Mul, "f64.mul")
WASP_V(0x00, 0xa3, F64Div, "f64.div")
WASP_V(0x00, 0xa4, F64Min, "f64.min")
WASP_V(0x00, 0xa5, F64Max, "f64.max")
WASP_V(0x00, 0xa6, F64Copysign, "f64.copysign")
WASP_V(0x00, 0xa7, I32WrapI64, "i32.wrap_i64")
WASP_V(0x00, 0xa8, I32TruncF32S, "i32.trunc_f32_s")
WASP_V(0x00, 0xa9, I32TruncF32U, "i32.trunc_f32_u")
WASP_V(0x00, 0xaa, I32TruncF64S, "i32.trunc_f64_s")
WASP_V(0x00, 0xab, I32TruncF64U, "i32.trunc_f64_u")
WASP_V(0x00, 0xac, I64ExtendI32S, "i64.extend_i32_s")
WASP_V(0x00, 0xad, I64ExtendI32U, "i64.extend_i32_u")
WASP_V(0x00, 0xae, I64TruncF32S, "i64.trunc_f32_s")
WASP_V(0x00, 0xaf, I64TruncF32U, "i64.trunc_f32_u")
WASP_V(0x00, 0xb0, I64TruncF64S, "i64.trunc_f64_s")
WASP_V(0x00, 0xb1, I64TruncF64U, "i64.trunc_f64_u")
WASP_V(0x00, 0xb2, F32ConvertI32S, "f32.convert_i32_s")
WASP_V(0x00, 0xb3, F32ConvertI32U, "f32.convert_i32_u")
WASP_V(0x00, 0xb4, F32ConvertI64S, "f32.convert_i64_s")
WASP_V(0x00, 0xb5, F32ConvertI64U, "f32.convert_i64_u")
WASP_V(0x00, 0xb6, F32DemoteF64, "f32.demote_f64")
WASP_V(0x00, 0xb7, F64ConvertI32S, "f64.convert_i32_s")
WASP_V(0x00, 0xb8, F64ConvertI32U, "f64.convert_i32_u")
WASP_V(0x00, 0xb9, F64ConvertI64S, "f64.convert_i64_s")
WASP_V(0x00, 0xba, F64ConvertI64U, "f64.convert_i64_u")
WASP_V(0x00, 0xbb, F64PromoteF32, "f64.promote_f32")
WASP_V(0x00, 0xbc, I32ReinterpretF32, "i32.reinterpret_f32")
WASP_V(0x00, 0xbd, I64ReinterpretF64, "i64.reinterpret_f64")
WASP_V(0x00, 0xbe, F32ReinterpretI32, "f32.reinterpret_i32")
WASP_V(0x00, 0xbf, F64ReinterpretI64, "f64.reinterpret_i64")

// Exception handling opcodes
WASP_FEATURE_V(0x00, 0x06, Try, "try", exceptions)
WASP_FEATURE_V(0x00, 0x07, Catch, "catch", exceptions)
WASP_FEATURE_V(0x00, 0x08, Throw, "throw", exceptions)
WASP_FEATURE_V(0x00, 0x09, Rethrow, "rethrow", exceptions)
WASP_FEATURE_V(0x00, 0x0a, BrOnExn, "br_on_exn", exceptions)

// Tail call opcodes
WASP_FEATURE_V(0x00, 0x12, ReturnCall, "return_call", tail_call)
WASP_FEATURE_V(0x00, 0x13, ReturnCallIndirect, "return_call_indirect", tail_call)

// Function references opcodes
WASP_FEATURE_V(0x00, 0x14, CallRef, "call_ref", function_references)
WASP_FEATURE_V(0x00, 0x15, ReturnCallRef, "return_call_ref", function_references)
WASP_FEATURE_V(0x00, 0x16, FuncBind, "func.bind", function_references)
WASP_FEATURE_V(0x00, 0x17, Let, "let", function_references)
WASP_FEATURE_V(0x00, 0xd3, RefAsNonNull, "ref.as_non_null", function_references)
WASP_FEATURE_V(0x00, 0xd4, BrOnNull, "br_on_null", function_references)

// Reference type opcodes
WASP_FEATURE_V(0x00, 0x1c, SelectT, "select", reference_types)
WASP_FEATURE_V(0x00, 0x25, TableGet, "table.get", reference_types)
WASP_FEATURE_V(0x00, 0x26, TableSet, "table.set", reference_types)
WASP_PREFIX_V (0xfc, 0x0f, TableGrow, "table.grow", reference_types)
WASP_PREFIX_V (0xfc, 0x10, TableSize, "table.size", reference_types)
WASP_PREFIX_V (0xfc, 0x11, TableFill, "table.fill", reference_types)
WASP_FEATURE_V(0x00, 0xd0, RefNull, "ref.null", reference_types)
WASP_FEATURE_V(0x00, 0xd1, RefIsNull, "ref.is_null", reference_types)
WASP_FEATURE_V(0x00, 0xd2, RefFunc, "ref.func", reference_types)

// Sign-extension opcodes
WASP_FEATURE_V(0x00, 0xc0, I32Extend8S, "i32.extend8_s", sign_extension)
WASP_FEATURE_V(0x00, 0xc1, I32Extend16S, "i32.extend16_s", sign_extension)
WASP_FEATURE_V(0x00, 0xc2, I64Extend8S, "i64.extend8_s", sign_extension)
WASP_FEATURE_V(0x00, 0xc3, I64Extend16S, "i64.extend16_s", sign_extension)
WASP_FEATURE_V(0x00, 0xc4, I64Extend32S, "i64.extend32_s", sign_extension)

// GC opcodes
WASP_FEATURE_V(0x00, 0xd5, RefEq, "ref.eq", gc)
WASP_PREFIX_V (0xfb, 0x01, StructNewWithRtt, "struct.new_with_rtt", gc)
WASP_PREFIX_V (0xfb, 0x02, StructNewDefaultWithRtt, "struct.new_default_with_rtt", gc)
WASP_PREFIX_V (0xfb, 0x03, StructGet, "struct.get", gc)
WASP_PREFIX_V (0xfb, 0x04, StructGetS, "struct.get_s", gc)
WASP_PREFIX_V (0xfb, 0x05, StructGetU, "struct.get_u", gc)
WASP_PREFIX_V (0xfb, 0x06, StructSet, "struct.set", gc)
WASP_PREFIX_V (0xfb, 0x11, ArrayNewWithRtt, "array.new_with_rtt", gc)
WASP_PREFIX_V (0xfb, 0x12, ArrayNewDefaultWithRtt, "array.new_default_with_rtt", gc)
WASP_PREFIX_V (0xfb, 0x13, ArrayGet, "array.get", gc)
WASP_PREFIX_V (0xfb, 0x14, ArrayGetS, "array.get_s", gc)
WASP_PREFIX_V (0xfb, 0x15, ArrayGetU, "array.get_u", gc)
WASP_PREFIX_V (0xfb, 0x16, ArraySet, "array.set", gc)
WASP_PREFIX_V (0xfb, 0x17, ArrayLen, "array.len", gc)
WASP_PREFIX_V (0xfb, 0x20, I31New, "i31.new", gc)
WASP_PREFIX_V (0xfb, 0x21, I31GetS, "i31.get_s", gc)
WASP_PREFIX_V (0xfb, 0x22, I31GetU, "i31.get_u", gc)
WASP_PREFIX_V (0xfb, 0x30, RttCanon, "rtt.canon", gc)
WASP_PREFIX_V (0xfb, 0x31, RttSub, "rtt.sub", gc)
WASP_PREFIX_V (0xfb, 0x40, RefTest, "ref.test", gc)
WASP_PREFIX_V (0xfb, 0x41, RefCast, "ref.cast", gc)
WASP_PREFIX_V (0xfb, 0x42, BrOnCast, "br_on_cast", gc)

// Saturating float-to-int opcodes
WASP_PREFIX_V(0xfc, 0x00, I32TruncSatF32S, "i32.trunc_sat_f32_s", saturating_float_to_int)
WASP_PREFIX_V(0xfc, 0x01, I32TruncSatF32U, "i32.trunc_sat_f32_u", saturating_float_to_int)
WASP_PREFIX_V(0xfc, 0x02, I32TruncSatF64S, "i32.trunc_sat_f64_s", saturating_float_to_int)
WASP_PREFIX_V(0xfc, 0x03, I32TruncSatF64U, "i32.trunc_sat_f64_u", saturating_float_to_int)
WASP_PREFIX_V(0xfc, 0x04, I64TruncSatF32S, "i64.trunc_sat_f32_s", saturating_float_to_int)
WASP_PREFIX_V(0xfc, 0x05, I64TruncSatF32U, "i64.trunc_sat_f32_u", saturating_float_to_int)
WASP_PREFIX_V(0xfc, 0x06, I64TruncSatF64S, "i64.trunc_sat_f64_s", saturating_float_to_int)
WASP_PREFIX_V(0xfc, 0x07, I64TruncSatF64U, "i64.trunc_sat_f64_u", saturating_float_to_int)

// Bulk memory opcodes
WASP_PREFIX_V(0xfc, 0x08, MemoryInit, "memory.init", bulk_memory)
WASP_PREFIX_V(0xfc, 0x09, DataDrop, "data.drop", bulk_memory)
WASP_PREFIX_V(0xfc, 0x0a, MemoryCopy, "memory.copy", bulk_memory)
WASP_PREFIX_V(0xfc, 0x0b, MemoryFill, "memory.fill", bulk_memory)
WASP_PREFIX_V(0xfc, 0x0c, TableInit, "table.init", bulk_memory)
WASP_PREFIX_V(0xfc, 0x0d, ElemDrop, "elem.drop", bulk_memory)
WASP_PREFIX_V(0xfc, 0x0e, TableCopy, "table.copy", bulk_memory)

// Simd opcodes
WASP_PREFIX_V(0xfd, 0x00, V128Load,  "v128.load", simd)
WASP_PREFIX_V(0xfd, 0x01, V128Load8X8S, "v128.load8x8_s", simd)
WASP_PREFIX_V(0xfd, 0x02, V128Load8X8U, "v128.load8x8_u", simd)
WASP_PREFIX_V(0xfd, 0x03, V128Load16X4S, "v128.load16x4_s", simd)
WASP_PREFIX_V(0xfd, 0x04, V128Load16X4U, "v128.load16x4_u", simd)
WASP_PREFIX_V(0xfd, 0x05, V128Load32X2S, "v128.load32x2_s", simd)
WASP_PREFIX_V(0xfd, 0x06, V128Load32X2U, "v128.load32x2_u", simd)
WASP_PREFIX_V(0xfd, 0x07, V128Load8Splat, "v128.load8_splat", simd)
WASP_PREFIX_V(0xfd, 0x08, V128Load16Splat, "v128.load16_splat", simd)
WASP_PREFIX_V(0xfd, 0x09, V128Load32Splat, "v128.load32_splat", simd)
WASP_PREFIX_V(0xfd, 0x0a, V128Load64Splat, "v128.load64_splat", simd)
WASP_PREFIX_V(0xfd, 0x0b, V128Store, "v128.store", simd)
WASP_PREFIX_V(0xfd, 0x0c, V128Const, "v128.const", simd)
WASP_PREFIX_V(0xfd, 0x0d, I8X16Shuffle, "i8x16.shuffle", simd)
WASP_PREFIX_V(0xfd, 0x0e, I8X16Swizzle, "i8x16.swizzle", simd)
WASP_PREFIX_V(0xfd, 0x0f, I8X16Splat, "i8x16.splat", simd)
WASP_PREFIX_V(0xfd, 0x10, I16X8Splat, "i16x8.splat", simd)
WASP_PREFIX_V(0xfd, 0x11, I32X4Splat, "i32x4.splat", simd)
WASP_PREFIX_V(0xfd, 0x12, I64X2Splat, "i64x2.splat", simd)
WASP_PREFIX_V(0xfd, 0x13, F32X4Splat, "f32x4.splat", simd)
WASP_PREFIX_V(0xfd, 0x14, F64X2Splat, "f64x2.splat", simd)
WASP_PREFIX_V(0xfd, 0x15, I8X16ExtractLaneS, "i8x16.extract_lane_s", simd)
WASP_PREFIX_V(0xfd, 0x16, I8X16ExtractLaneU, "i8x16.extract_lane_u", simd)
WASP_PREFIX_V(0xfd, 0x17, I8X16ReplaceLane, "i8x16.replace_lane", simd)
WASP_PREFIX_V(0xfd, 0x18, I16X8ExtractLaneS, "i16x8.extract_lane_s", simd)
WASP_PREFIX_V(0xfd, 0x19, I16X8ExtractLaneU, "i16x8.extract_lane_u", simd)
WASP_PREFIX_V(0xfd, 0x1a, I16X8ReplaceLane, "i16x8.replace_lane", simd)
WASP_PREFIX_V(0xfd, 0x1b, I32X4ExtractLane, "i32x4.extract_lane", simd)
WASP_PREFIX_V(0xfd, 0x1c, I32X4ReplaceLane, "i32x4.replace_lane", simd)
WASP_PREFIX_V(0xfd, 0x1d, I64X2ExtractLane, "i64x2.extract_lane", simd)
WASP_PREFIX_V(0xfd, 0x1e, I64X2ReplaceLane, "i64x2.replace_lane", simd)
WASP_PREFIX_V(0xfd, 0x1f, F32X4ExtractLane, "f32x4.extract_lane", simd)
WASP_PREFIX_V(0xfd, 0x20, F32X4ReplaceLane, "f32x4.replace_lane", simd)
WASP_PREFIX_V(0xfd, 0x21, F64X2ExtractLane, "f64x2.extract_lane", simd)
WASP_PREFIX_V(0xfd, 0x22, F64X2ReplaceLane, "f64x2.replace_lane", simd)
WASP_PREFIX_V(0xfd, 0x23, I8X16Eq, "i8x16.eq", simd)
WASP_PREFIX_V(0xfd, 0x24, I8X16Ne, "i8x16.ne", simd)
WASP_PREFIX_V(0xfd, 0x25, I8X16LtS, "i8x16.lt_s", simd)
WASP_PREFIX_V(0xfd, 0x26, I8X16LtU, "i8x16.lt_u", simd)
WASP_PREFIX_V(0xfd, 0x27, I8X16GtS, "i8x16.gt_s", simd)
WASP_PREFIX_V(0xfd, 0x28, I8X16GtU, "i8x16.gt_u", simd)
WASP_PREFIX_V(0xfd, 0x29, I8X16LeS, "i8x16.le_s", simd)
WASP_PREFIX_V(0xfd, 0x2a, I8X16LeU, "i8x16.le_u", simd)
WASP_PREFIX_V(0xfd, 0x2b, I8X16GeS, "i8x16.ge_s", simd)
WASP_PREFIX_V(0xfd, 0x2c, I8X16GeU, "i8x16.ge_u", simd)
WASP_PREFIX_V(0xfd, 0x2d, I16X8Eq, "i16x8.eq", simd)
WASP_PREFIX_V(0xfd, 0x2e, I16X8Ne, "i16x8.ne", simd)
WASP_PREFIX_V(0xfd, 0x2f, I16X8LtS, "i16x8.lt_s", simd)
WASP_PREFIX_V(0xfd, 0x30, I16X8LtU, "i16x8.lt_u", simd)
WASP_PREFIX_V(0xfd, 0x31, I16X8GtS, "i16x8.gt_s", simd)
WASP_PREFIX_V(0xfd, 0x32, I16X8GtU, "i16x8.gt_u", simd)
WASP_PREFIX_V(0xfd, 0x33, I16X8LeS, "i16x8.le_s", simd)
WASP_PREFIX_V(0xfd, 0x34, I16X8LeU, "i16x8.le_u", simd)
WASP_PREFIX_V(0xfd, 0x35, I16X8GeS, "i16x8.ge_s", simd)
WASP_PREFIX_V(0xfd, 0x36, I16X8GeU, "i16x8.ge_u", simd)
WASP_PREFIX_V(0xfd, 0x37, I32X4Eq, "i32x4.eq", simd)
WASP_PREFIX_V(0xfd, 0x38, I32X4Ne, "i32x4.ne", simd)
WASP_PREFIX_V(0xfd, 0x39, I32X4LtS, "i32x4.lt_s", simd)
WASP_PREFIX_V(0xfd, 0x3a, I32X4LtU, "i32x4.lt_u", simd)
WASP_PREFIX_V(0xfd, 0x3b, I32X4GtS, "i32x4.gt_s", simd)
WASP_PREFIX_V(0xfd, 0x3c, I32X4GtU, "i32x4.gt_u", simd)
WASP_PREFIX_V(0xfd, 0x3d, I32X4LeS, "i32x4.le_s", simd)
WASP_PREFIX_V(0xfd, 0x3e, I32X4LeU, "i32x4.le_u", simd)
WASP_PREFIX_V(0xfd, 0x3f, I32X4GeS, "i32x4.ge_s", simd)
WASP_PREFIX_V(0xfd, 0x40, I32X4GeU, "i32x4.ge_u", simd)
WASP_PREFIX_V(0xfd, 0x41, F32X4Eq, "f32x4.eq", simd)
WASP_PREFIX_V(0xfd, 0x42, F32X4Ne, "f32x4.ne", simd)
WASP_PREFIX_V(0xfd, 0x43, F32X4Lt, "f32x4.lt", simd)
WASP_PREFIX_V(0xfd, 0x44, F32X4Gt, "f32x4.gt", simd)
WASP_PREFIX_V(0xfd, 0x45, F32X4Le, "f32x4.le", simd)
WASP_PREFIX_V(0xfd, 0x46, F32X4Ge, "f32x4.ge", simd)
WASP_PREFIX_V(0xfd, 0x47, F64X2Eq, "f64x2.eq", simd)
WASP_PREFIX_V(0xfd, 0x48, F64X2Ne, "f64x2.ne", simd)
WASP_PREFIX_V(0xfd, 0x49, F64X2Lt, "f64x2.lt", simd)
WASP_PREFIX_V(0xfd, 0x4a, F64X2Gt, "f64x2.gt", simd)
WASP_PREFIX_V(0xfd, 0x4b, F64X2Le, "f64x2.le", simd)
WASP_PREFIX_V(0xfd, 0x4c, F64X2Ge, "f64x2.ge", simd)
WASP_PREFIX_V(0xfd, 0x4d, V128Not, "v128.not", simd)
WASP_PREFIX_V(0xfd, 0x4e, V128And, "v128.and", simd)
WASP_PREFIX_V(0xfd, 0x4f, V128Andnot, "v128.andnot", simd)
WASP_PREFIX_V(0xfd, 0x50, V128Or,  "v128.or", simd)
WASP_PREFIX_V(0xfd, 0x51, V128Xor, "v128.xor", simd)
WASP_PREFIX_V(0xfd, 0x52, V128BitSelect, "v128.bitselect", simd)
WASP_PREFIX_V(0xfd, 0x60, I8X16Abs, "i8x16.abs", simd)
WASP_PREFIX_V(0xfd, 0x61, I8X16Neg, "i8x16.neg", simd)
WASP_PREFIX_V(0xfd, 0x62, I8X16AnyTrue, "i8x16.any_true", simd)
WASP_PREFIX_V(0xfd, 0x63, I8X16AllTrue, "i8x16.all_true", simd)
WASP_PREFIX_V(0xfd, 0x64, I8X16Bitmask, "i8x16.bitmask", simd)
WASP_PREFIX_V(0xfd, 0x65, I8X16NarrowI16X8S, "i8x16.narrow_i16x8_s", simd)
WASP_PREFIX_V(0xfd, 0x66, I8X16NarrowI16X8U, "i8x16.narrow_i16x8_u", simd)
WASP_PREFIX_V(0xfd, 0x6b, I8X16Shl, "i8x16.shl", simd)
WASP_PREFIX_V(0xfd, 0x6c, I8X16ShrS, "i8x16.shr_s", simd)
WASP_PREFIX_V(0xfd, 0x6d, I8X16ShrU, "i8x16.shr_u", simd)
WASP_PREFIX_V(0xfd, 0x6e, I8X16Add, "i8x16.add", simd)
WASP_PREFIX_V(0xfd, 0x6f, I8X16AddSatS, "i8x16.add_sat_s", simd)
WASP_PREFIX_V(0xfd, 0x70, I8X16AddSatU, "i8x16.add_sat_u", simd)
WASP_PREFIX_V(0xfd, 0x71, I8X16Sub, "i8x16.sub", simd)
WASP_PREFIX_V(0xfd, 0x72, I8X16SubSatS, "i8x16.sub_sat_s", simd)
WASP_PREFIX_V(0xfd, 0x73, I8X16SubSatU, "i8x16.sub_sat_u", simd)
WASP_PREFIX_V(0xfd, 0x76, I8X16MinS, "i8x16.min_s", simd)
WASP_PREFIX_V(0xfd, 0x77, I8X16MinU, "i8x16.min_u", simd)
WASP_PREFIX_V(0xfd, 0x78, I8X16MaxS, "i8x16.max_s", simd)
WASP_PREFIX_V(0xfd, 0x79, I8X16MaxU, "i8x16.max_u", simd)
WASP_PREFIX_V(0xfd, 0x7b, I8X16AvgrU, "i8x16.avgr_u", simd)
WASP_PREFIX_V(0xfd, 0x80, I16X8Abs, "i16x8.abs", simd)
WASP_PREFIX_V(0xfd, 0x81, I16X8Neg, "i16x8.neg", simd)
WASP_PREFIX_V(0xfd, 0x82, I16X8AnyTrue, "i16x8.any_true", simd)
WASP_PREFIX_V(0xfd, 0x83, I16X8AllTrue, "i16x8.all_true", simd)
WASP_PREFIX_V(0xfd, 0x84, I16X8Bitmask, "i16x8.bitmask", simd)
WASP_PREFIX_V(0xfd, 0x85, I16X8NarrowI32X4S, "i16x8.narrow_i32x4_s", simd)
WASP_PREFIX_V(0xfd, 0x86, I16X8NarrowI32X4U, "i16x8.narrow_i32x4_u", simd)
WASP_PREFIX_V(0xfd, 0x87, I16X8WidenLowI8X16S, "i16x8.widen_low_i8x16_s", simd)
WASP_PREFIX_V(0xfd, 0x88, I16X8WidenHighI8X16S, "i16x8.widen_high_i8x16_s", simd)
WASP_PREFIX_V(0xfd, 0x89, I16X8WidenLowI8X16U, "i16x8.widen_low_i8x16_u", simd)
WASP_PREFIX_V(0xfd, 0x8a, I16X8WidenHighI8X16U, "i16x8.widen_high_i8x16_u", simd)
WASP_PREFIX_V(0xfd, 0x8b, I16X8Shl, "i16x8.shl", simd)
WASP_PREFIX_V(0xfd, 0x8c, I16X8ShrS, "i16x8.shr_s", simd)
WASP_PREFIX_V(0xfd, 0x8d, I16X8ShrU, "i16x8.shr_u", simd)
WASP_PREFIX_V(0xfd, 0x8e, I16X8Add, "i16x8.add", simd)
WASP_PREFIX_V(0xfd, 0x8f, I16X8AddSatS, "i16x8.add_sat_s", simd)
WASP_PREFIX_V(0xfd, 0x90, I16X8AddSatU, "i16x8.add_sat_u", simd)
WASP_PREFIX_V(0xfd, 0x91, I16X8Sub, "i16x8.sub", simd)
WASP_PREFIX_V(0xfd, 0x92, I16X8SubSatS, "i16x8.sub_sat_s", simd)
WASP_PREFIX_V(0xfd, 0x93, I16X8SubSatU, "i16x8.sub_sat_u", simd)
WASP_PREFIX_V(0xfd, 0x95, I16X8Mul, "i16x8.mul", simd)
WASP_PREFIX_V(0xfd, 0x96, I16X8MinS, "i16X8.min_s", simd)
WASP_PREFIX_V(0xfd, 0x97, I16X8MinU, "i16X8.min_u", simd)
WASP_PREFIX_V(0xfd, 0x98, I16X8MaxS, "i16X8.max_s", simd)
WASP_PREFIX_V(0xfd, 0x99, I16X8MaxU, "i16X8.max_u", simd)
WASP_PREFIX_V(0xfd, 0x9b, I16X8AvgrU, "i16x8.avgr_u", simd)
WASP_PREFIX_V(0xfd, 0xa0, I32X4Abs, "i32x4.abs", simd)
WASP_PREFIX_V(0xfd, 0xa1, I32X4Neg, "i32x4.neg", simd)
WASP_PREFIX_V(0xfd, 0xa2, I32X4AnyTrue, "i32x4.any_true", simd)
WASP_PREFIX_V(0xfd, 0xa3, I32X4AllTrue, "i32x4.all_true", simd)
WASP_PREFIX_V(0xfd, 0xa4, I32X4Bitmask, "i32x4.bitmask", simd)
WASP_PREFIX_V(0xfd, 0xa7, I32X4WidenLowI16X8S, "i16x8.widen_low_i16x8_s", simd)
WASP_PREFIX_V(0xfd, 0xa8, I32X4WidenHighI16X8S, "i16x8.widen_high_i16x8_s", simd)
WASP_PREFIX_V(0xfd, 0xa9, I32X4WidenLowI16X8U, "i16x8.widen_low_i16x8_u", simd)
WASP_PREFIX_V(0xfd, 0xaa, I32X4WidenHighI16X8U, "i16x8.widen_high_i16x8_u", simd)
WASP_PREFIX_V(0xfd, 0xab, I32X4Shl, "i32x4.shl", simd)
WASP_PREFIX_V(0xfd, 0xac, I32X4ShrS, "i32x4.shr_s", simd)
WASP_PREFIX_V(0xfd, 0xad, I32X4ShrU, "i32x4.shr_u", simd)
WASP_PREFIX_V(0xfd, 0xae, I32X4Add, "i32x4.add", simd)
WASP_PREFIX_V(0xfd, 0xb1, I32X4Sub, "i32x4.sub", simd)
WASP_PREFIX_V(0xfd, 0xb5, I32X4Mul, "i32x4.mul", simd)
WASP_PREFIX_V(0xfd, 0xb6, I32X4MinS, "i32X4.min_s", simd)
WASP_PREFIX_V(0xfd, 0xb7, I32X4MinU, "i32X4.min_u", simd)
WASP_PREFIX_V(0xfd, 0xb8, I32X4MaxS, "i32X4.max_s", simd)
WASP_PREFIX_V(0xfd, 0xb9, I32X4MaxU, "i32X4.max_u", simd)
WASP_PREFIX_V(0xfd, 0xba, I32X4DotI16X8S, "i32x4.dot_i16x8_s", simd)
WASP_PREFIX_V(0xfd, 0xc1, I64X2Neg, "i64x2.neg", simd)
WASP_PREFIX_V(0xfd, 0xcb, I64X2Shl, "i64x2.shl", simd)
WASP_PREFIX_V(0xfd, 0xcc, I64X2ShrS, "i64x2.shr_s", simd)
WASP_PREFIX_V(0xfd, 0xcd, I64X2ShrU, "i64x2.shr_u", simd)
WASP_PREFIX_V(0xfd, 0xce, I64X2Add, "i64x2.add", simd)
WASP_PREFIX_V(0xfd, 0xd1, I64X2Sub, "i64x2.sub", simd)
WASP_PREFIX_V(0xfd, 0xd5, I64X2Mul, "i64x2.mul", simd)
WASP_PREFIX_V(0xfd, 0xd8, F32X4Ceil, "f32x4.ceil", simd)
WASP_PREFIX_V(0xfd, 0xd9, F32X4Floor, "f32x4.floor", simd)
WASP_PREFIX_V(0xfd, 0xda, F32X4Trunc, "f32x4.trunc", simd)
WASP_PREFIX_V(0xfd, 0xdb, F32X4Nearest, "f32x4.nearest", simd)
WASP_PREFIX_V(0xfd, 0xdc, F64X2Ceil, "f64x2.ceil", simd)
WASP_PREFIX_V(0xfd, 0xdd, F64X2Floor, "f64x2.floor", simd)
WASP_PREFIX_V(0xfd, 0xde, F64X2Trunc, "f64x2.trunc", simd)
WASP_PREFIX_V(0xfd, 0xdf, F64X2Nearest, "f64x2.nearest", simd)
WASP_PREFIX_V(0xfd, 0xe0, F32X4Abs, "f32x4.abs", simd)
WASP_PREFIX_V(0xfd, 0xe1, F32X4Neg, "f32x4.neg", simd)
WASP_PREFIX_V(0xfd, 0xe3, F32X4Sqrt, "f32x4.sqrt", simd)
WASP_PREFIX_V(0xfd, 0xe4, F32X4Add, "f32x4.add", simd)
WASP_PREFIX_V(0xfd, 0xe5, F32X4Sub, "f32x4.sub", simd)
WASP_PREFIX_V(0xfd, 0xe6, F32X4Mul, "f32x4.mul", simd)
WASP_PREFIX_V(0xfd, 0xe7, F32X4Div, "f32x4.div", simd)
WASP_PREFIX_V(0xfd, 0xe8, F32X4Min, "f32x4.min", simd)
WASP_PREFIX_V(0xfd, 0xe9, F32X4Max, "f32x4.max", simd)
WASP_PREFIX_V(0xfd, 0xea, F32X4Pmin, "f32x4.pmin", simd)
WASP_PREFIX_V(0xfd, 0xeb, F32X4Pmax, "f32x4.pmax", simd)
WASP_PREFIX_V(0xfd, 0xec, F64X2Abs, "f64x2.abs", simd)
WASP_PREFIX_V(0xfd, 0xed, F64X2Neg, "f64x2.neg", simd)
WASP_PREFIX_V(0xfd, 0xef, F64X2Sqrt, "f64x2.sqrt", simd)
WASP_PREFIX_V(0xfd, 0xf0, F64X2Add, "f64x2.add", simd)
WASP_PREFIX_V(0xfd, 0xf1, F64X2Sub, "f64x2.sub", simd)
WASP_PREFIX_V(0xfd, 0xf2, F64X2Mul, "f64x2.mul", simd)
WASP_PREFIX_V(0xfd, 0xf3, F64X2Div, "f64x2.div", simd)
WASP_PREFIX_V(0xfd, 0xf4, F64X2Min, "f64x2.min", simd)
WASP_PREFIX_V(0xfd, 0xf5, F64X2Max, "f64x2.max", simd)
WASP_PREFIX_V(0xfd, 0xf6, F64X2Pmin, "f64x2.pmin", simd)
WASP_PREFIX_V(0xfd, 0xf7, F64X2Pmax, "f64x2.pmax", simd)
WASP_PREFIX_V(0xfd, 0xf8, I32X4TruncSatF32X4S,"i32x4.trunc_sat_f32x4_s", simd)
WASP_PREFIX_V(0xfd, 0xf9, I32X4TruncSatF32X4U,"i32x4.trunc_sat_f32x4_u", simd)
WASP_PREFIX_V(0xfd, 0xfa, F32X4ConvertI32X4S, "f32x4.convert_i32x4_s", simd)
WASP_PREFIX_V(0xfd, 0xfb, F32X4ConvertI32X4U, "f32x4.convert_i32x4_u", simd)
WASP_PREFIX_V(0xfd, 0xfc, V128Load32Zero, "v128.load32_zero", simd)
WASP_PREFIX_V(0xfd, 0xfd, V128Load64Zero, "v128.load64_zero", simd)

// Thread opcodes
WASP_PREFIX_V(0xfe, 0x00, MemoryAtomicNotify, "memory.atomic.notify", threads)
WASP_PREFIX_V(0xfe, 0x01, MemoryAtomicWait32, "memory.atomic.wait32", threads)
WASP_PREFIX_V(0xfe, 0x02, MemoryAtomicWait64, "memory.atomic.wait64", threads)
WASP_PREFIX_V(0xfe, 0x10, I32AtomicLoad, "i32.atomic.load", threads)
WASP_PREFIX_V(0xfe, 0x11, I64AtomicLoad, "i64.atomic.load", threads)
WASP_PREFIX_V(0xfe, 0x12, I32AtomicLoad8U, "i32.atomic.load8_u", threads)
WASP_PREFIX_V(0xfe, 0x13, I32AtomicLoad16U, "i32.atomic.load16_u", threads)
WASP_PREFIX_V(0xfe, 0x14, I64AtomicLoad8U, "i64.atomic.load8_u", threads)
WASP_PREFIX_V(0xfe, 0x15, I64AtomicLoad16U, "i64.atomic.load16_u", threads)
WASP_PREFIX_V(0xfe, 0x16, I64AtomicLoad32U, "i64.atomic.load32_u", threads)
WASP_PREFIX_V(0xfe, 0x17, I32AtomicStore, "i32.atomic.store", threads)
WASP_PREFIX_V(0xfe, 0x18, I64AtomicStore, "i64.atomic.store", threads)
WASP_PREFIX_V(0xfe, 0x19, I32AtomicStore8, "i32.atomic.store8", threads)
WASP_PREFIX_V(0xfe, 0x1a, I32AtomicStore16, "i32.atomic.store16", threads)
WASP_PREFIX_V(0xfe, 0x1b, I64AtomicStore8, "i64.atomic.store8", threads)
WASP_PREFIX_V(0xfe, 0x1c, I64AtomicStore16, "i64.atomic.store16", threads)
WASP_PREFIX_V(0xfe, 0x1d, I64AtomicStore32, "i64.atomic.store32", threads)
WASP_PREFIX_V(0xfe, 0x1e, I32AtomicRmwAdd, "i32.atomic.rmw.add", threads)
WASP_PREFIX_V(0xfe, 0x1f, I64AtomicRmwAdd, "i64.atomic.rmw.add", threads)
WASP_PREFIX_V(0xfe, 0x20, I32AtomicRmw8AddU, "i32.atomic.rmw8.add_u", threads)
WASP_PREFIX_V(0xfe, 0x21, I32AtomicRmw16AddU, "i32.atomic.rmw16.add_u", threads)
WASP_PREFIX_V(0xfe, 0x22, I64AtomicRmw8AddU, "i64.atomic.rmw8.add_u", threads)
WASP_PREFIX_V(0xfe, 0x23, I64AtomicRmw16AddU, "i64.atomic.rmw16.add_u", threads)
WASP_PREFIX_V(0xfe, 0x24, I64AtomicRmw32AddU, "i64.atomic.rmw32.add_u", threads)
WASP_PREFIX_V(0xfe, 0x25, I32AtomicRmwSub, "i32.atomic.rmw.sub", threads)
WASP_PREFIX_V(0xfe, 0x26, I64AtomicRmwSub, "i64.atomic.rmw.sub", threads)
WASP_PREFIX_V(0xfe, 0x27, I32AtomicRmw8SubU, "i32.atomic.rmw8.sub_u", threads)
WASP_PREFIX_V(0xfe, 0x28, I32AtomicRmw16SubU, "i32.atomic.rmw16.sub_u", threads)
WASP_PREFIX_V(0xfe, 0x29, I64AtomicRmw8SubU, "i64.atomic.rmw8.sub_u", threads)
WASP_PREFIX_V(0xfe, 0x2a, I64AtomicRmw16SubU, "i64.atomic.rmw16.sub_u", threads)
WASP_PREFIX_V(0xfe, 0x2b, I64AtomicRmw32SubU, "i64.atomic.rmw32.sub_u", threads)
WASP_PREFIX_V(0xfe, 0x2c, I32AtomicRmwAnd, "i32.atomic.rmw.and", threads)
WASP_PREFIX_V(0xfe, 0x2d, I64AtomicRmwAnd, "i64.atomic.rmw.and", threads)
WASP_PREFIX_V(0xfe, 0x2e, I32AtomicRmw8AndU, "i32.atomic.rmw8.and_u", threads)
WASP_PREFIX_V(0xfe, 0x2f, I32AtomicRmw16AndU, "i32.atomic.rmw16.and_u", threads)
WASP_PREFIX_V(0xfe, 0x30, I64AtomicRmw8AndU, "i64.atomic.rmw8.and_u", threads)
WASP_PREFIX_V(0xfe, 0x31, I64AtomicRmw16AndU, "i64.atomic.rmw16.and_u", threads)
WASP_PREFIX_V(0xfe, 0x32, I64AtomicRmw32AndU, "i64.atomic.rmw32.and_u", threads)
WASP_PREFIX_V(0xfe, 0x33, I32AtomicRmwOr, "i32.atomic.rmw.or", threads)
WASP_PREFIX_V(0xfe, 0x34, I64AtomicRmwOr, "i64.atomic.rmw.or", threads)
WASP_PREFIX_V(0xfe, 0x35, I32AtomicRmw8OrU, "i32.atomic.rmw8.or_u", threads)
WASP_PREFIX_V(0xfe, 0x36, I32AtomicRmw16OrU, "i32.atomic.rmw16.or_u", threads)
WASP_PREFIX_V(0xfe, 0x37, I64AtomicRmw8OrU, "i64.atomic.rmw8.or_u", threads)
WASP_PREFIX_V(0xfe, 0x38, I64AtomicRmw16OrU, "i64.atomic.rmw16.or_u", threads)
WASP_PREFIX_V(0xfe, 0x39, I64AtomicRmw32OrU, "i64.atomic.rmw32.or_u", threads)
WASP_PREFIX_V(0xfe, 0x3a, I32AtomicRmwXor, "i32.atomic.rmw.xor", threads)
WASP_PREFIX_V(0xfe, 0x3b, I64AtomicRmwXor, "i64.atomic.rmw.xor", threads)
WASP_PREFIX_V(0xfe, 0x3c, I32AtomicRmw8XorU, "i32.atomic.rmw8.xor_u", threads)
WASP_PREFIX_V(0xfe, 0x3d, I32AtomicRmw16XorU, "i32.atomic.rmw16.xor_u", threads)
WASP_PREFIX_V(0xfe, 0x3e, I64AtomicRmw8XorU, "i64.atomic.rmw8.xor_u", threads)
WASP_PREFIX_V(0xfe, 0x3f, I64AtomicRmw16XorU, "i64.atomic.rmw16.xor_u", threads)
WASP_PREFIX_V(0xfe, 0x40, I64AtomicRmw32XorU, "i64.atomic.rmw32.xor_u", threads)
WASP_PREFIX_V(0xfe, 0x41, I32AtomicRmwXchg, "i32.atomic.rmw.xchg", threads)
WASP_PREFIX_V(0xfe, 0x42, I64AtomicRmwXchg, "i64.atomic.rmw.xchg", threads)
WASP_PREFIX_V(0xfe, 0x43, I32AtomicRmw8XchgU, "i32.atomic.rmw8.xchg_u", threads)
WASP_PREFIX_V(0xfe, 0x44, I32AtomicRmw16XchgU, "i32.atomic.rmw16.xchg_u", threads)
WASP_PREFIX_V(0xfe, 0x45, I64AtomicRmw8XchgU, "i64.atomic.rmw8.xchg_u", threads)
WASP_PREFIX_V(0xfe, 0x46, I64AtomicRmw16XchgU, "i64.atomic.rmw16.xchg_u", threads)
WASP_PREFIX_V(0xfe, 0x47, I64AtomicRmw32XchgU, "i64.atomic.rmw32.xchg_u", threads)
WASP_PREFIX_V(0xfe, 0x48, I32AtomicRmwCmpxchg, "i32.atomic.rmw.cmpxchg", threads)
WASP_PREFIX_V(0xfe, 0x49, I64AtomicRmwCmpxchg, "i64.atomic.rmw.cmpxchg", threads)
WASP_PREFIX_V(0xfe, 0x4a, I32AtomicRmw8CmpxchgU, "i32.atomic.rmw8.cmpxchg_u", threads)
WASP_PREFIX_V(0xfe, 0x4b, I32AtomicRmw16CmpxchgU, "i32.atomic.rmw16.cmpxchg_u", threads)
WASP_PREFIX_V(0xfe, 0x4c, I64AtomicRmw8CmpxchgU, "i64.atomic.rmw8.cmpxchg_u", threads)
WASP_PREFIX_V(0xfe, 0x4d, I64AtomicRmw16CmpxchgU, "i64.atomic.rmw16.cmpxchg_u", threads)
WASP_PREFIX_V(0xfe, 0x4e, I64AtomicRmw32CmpxchgU, "i64.atomic.rmw32.cmpxchg_u", threads)
